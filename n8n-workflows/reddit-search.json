{
  "name": "IdeaForge - Reddit Search",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "ideaforge/reddit-search",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "d80ed734-4e8e-4e05-9c0a-b7a390170aa1",
      "name": "Webhook",
      "webhookId": "9cd4e13a-1fda-4fa5-b409-3743665fbe6e"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Get the request headers\nconst headers = $json.headers || {};\nconst body = $json.body;\n\n// Check API key authentication\nconst apiKey = headers['x-api-key'];\nconst validApiKey = 'local-dev-api-key-12345'; // In production, this would come from credentials\n\nif (!apiKey) {\n  throw new Error('Missing API key. Please provide X-API-Key header');\n}\n\nif (apiKey !== validApiKey) {\n  throw new Error('Invalid API key');\n}\n\n// Validate required fields\nif (!body.query) {\n  throw new Error('Missing required field: query');\n}\nif (!body.sessionId) {\n  throw new Error('Missing required field: sessionId');\n}\n\n// Sanitize query (max 200 chars)\nbody.query = body.query.trim().substring(0, 200);\n\n// Handle subreddits (optional field)\nif (body.subreddits && Array.isArray(body.subreddits)) {\n  body.subreddits = body.subreddits.slice(0, 10);\n} else if (!body.subreddits) {\n  body.subreddits = [\n    'programming',\n    'webdev',\n    'javascript',\n    'typescript',\n    'node',\n    'learnprogramming'\n  ];\n}\n\n// Add timestamp and metadata\nbody.processedAt = new Date().toISOString();\nbody.webhookType = 'reddit-search';\nbody.authenticated = true;\n\n// Return the validated data\nreturn body;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "989b0762-219e-41b6-9ed8-3e364013a886",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type, X-API-Key"
              },
              {
                "name": "Access-Control-Max-Age",
                "value": "86400"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        440,
        0
      ],
      "id": "08249f92-4eae-4711-ba23-1b72e5907b3a",
      "name": "Respond to Webhook"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1c0fdc37-8c53-4a37-b742-c2285e73da83",
  "meta": {
    "instanceId": "92a0fdacd999c0291780e000ee0e5831611937a38c77bda4c332c38b95ff4613"
  },
  "id": "JENK25t7XUf9AyiZ",
  "tags": []
}